name: check

on:
  pull_request:
    types: [labeled, opened, synchronize, reopened]

jobs:
  check_codyze:
    runs-on: ubuntu-latest
    if: contains(github.event.pull_request.labels.*.name, 'codyze-check')
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: "zulu"
          java-version: "11"
      - name: Build for Codyze
        run: |
          ./gradlew --parallel -Pversion=0.0.0-SNAPSHOT -x signMavenPublication -x javadoc publishToMavenLocal
      - name: Checkout and test codyze
        run: |
          git clone https://github.com/Fraunhofer-AISEC/codyze.git
          cd codyze
          sed -i 's|cpg:\([0-9\.]*\).*|cpg:0.0.0-SNAPSHOT")|' build.gradle.kts
          ./gradlew --parallel test
  build_external_pull_request:
    runs-on: ubuntu-latest
    # only run this for external pull requests, internal pull request will run the build step from build.yml
    if: (github.event.pull_request.base.repo.full_name != github.event.pull_request.head.repo.full_name)
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: "zulu"
          java-version: "11"
      - name: Determine Version
        run: |
          # determine version from tag
          export VERSION=$(echo "${GITHUB_REF}" | cut -d "/" -f3)
          if [[ $VERSION != v* ]]
          then
            export VERSION=""
            echo "Building version-less (master or feature branch)"
          else
            # make version more Java-friendly by dropping the 'v'
            export VERSION=${VERSION:1:${#VERSION}}
            echo "Building as ${VERSION}"
          fi
          echo "##[set-output name=version;]$VERSION"
        id: determine_version
      - name: Build ${{ steps.determine_version.outputs.version }}
        run: |
          if [ "$SONAR_TOKEN" != "" ]
          then
            ./gradlew --parallel -Pversion=$VERSION spotlessCheck build sonarqube \
            -Dsonar.projectKey=Fraunhofer-AISEC_cpg \
            -Dsonar.organization=fraunhofer-aisec \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=$SONAR_TOKEN
          else
            ./gradlew --parallel -Pversion=$VERSION spotlessCheck build
          fi
        id: build
        env:
          VERSION: ${{ steps.determine_version.outputs.version }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
