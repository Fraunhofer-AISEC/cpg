name: build

on:
  push:
    branches:
      - master
    tags:
      - v*.*.*
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  code-compliance:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: Fraunhofer-AISEC/codyze-action@v2.3
        with:
          markDirectory: cpg-library/src/main/mark
          directory: cpg-library/src/main/java

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of SonarQube analysis
      - uses: actions/setup-java@v2
        with:
          distribution: "zulu"
          java-version: "11"
      - uses: actions/setup-python@v2
        with:
          python-version: "3.9"
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
      - name: Setup neo4j
        run: |
          docker run -d --env NEO4J_AUTH=neo4j/password -p7474:7474 -p7687:7687 neo4j
      - name: Cache SonarCloud packages
        uses: actions/cache@v2
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Determine Version
        run: |
          # determine version from tag
          export VERSION=$(echo "${GITHUB_REF}" | cut -d "/" -f3)
          if [[ $VERSION != v* ]]
          then
            export VERSION=""
            echo "Building version-less (master or feature branch)"
          else
            # make version more Java-friendly by dropping the 'v'
            export VERSION=${VERSION:1:${#VERSION}}
            echo "Building as ${VERSION}"
          fi
          echo "##[set-output name=version;]$VERSION"
        id: determine_version
      - name: Install JEP
        run: |
          pip3 install jep
          sudo cp /opt/hostedtoolcache/Python/3.9*/x64/lib/python3.9/site-packages/jep/libjep.so /usr/lib/
      - name: Build ${{ steps.determine_version.outputs.version }}
        run: |
          if [ "$SONAR_TOKEN" != "" ]
          then
            ./gradlew --parallel -Pversion=$VERSION -Pexperimental -PexperimentalTypeScript build sonarqube \
            -Dsonar.projectKey=Fraunhofer-AISEC_cpg \
            -Dsonar.organization=fraunhofer-aisec \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=$SONAR_TOKEN
          else
            ./gradlew --parallel -Pversion=$VERSION -Pexperimental -PexperimentalTypeScript -Pintegration build
          fi
        id: build
        env:
          VERSION: ${{ steps.determine_version.outputs.version }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Archive test reports
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: test
          path: "**/build/reports/tests"
      - name: JavaDoc
        if: startsWith(github.ref, 'refs/tags/v') && !contains(github.ref, 'beta')
        uses: JamesIves/github-pages-deploy-action@releases/v3
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: gh-pages
          FOLDER: cpg-library/build/docs/javadoc
      - name: Publish
        if: startsWith(github.ref, 'refs/tags/v') && !contains(github.ref, 'beta')      
        run: |
          export ORG_GRADLE_PROJECT_signingKey=`echo ${{ secrets.GPG_PRIVATE_KEY }} | base64 -d`
          ./gradlew -Dorg.gradle.internal.publish.checksums.insecure=true --parallel -Pversion=$VERSION build signMavenPublication publish
        env:
          VERSION: ${{ steps.determine_version.outputs.version }}
          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.GPG_PASSWORD }}
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
      - name: "Create Release"
        if: startsWith(github.ref, 'refs/tags/v') && !contains(github.ref, 'beta')
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ steps.determine_version.outputs.version }}
          draft: false
          prerelease: false
