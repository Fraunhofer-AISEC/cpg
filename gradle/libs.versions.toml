[versions]
kotlin = "1.8.0"
neo4j = "4.0.1"
log4j = "2.19.0"
sonarqube = "3.5.0.2730"
spotless = "6.14.0"

[libraries]
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin"}
kotlin-script-runtime = { module = "org.jetbrains.kotlin:kotlin-script-runtime", version.ref = "kotlin"}
kotlin-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version = "1.6.4"}
kotlin-ki-shell = { module = "org.jetbrains.kotlinx:ki-shell", version = "0.5.2"}
kotlin-test-junit5 = { module = "org.jetbrains.kotlin:kotlin-test-junit5", version.ref = "kotlin"}  # this is only needed for the testFixtures in cpg-core, everywhere else kotlin("test") is used

log4j-impl = { module = "org.apache.logging.log4j:log4j-slf4j2-impl", version.ref = "log4j" }
log4j-core = { module= "org.apache.logging.log4j:log4j-core", version.ref = "log4j" }

jline = { module = "org.jline:jline", version = "3.22.0" }
apache-commons-lang3 = { module = "org.apache.commons:commons-lang3", version = "3.12.0"}
neo4j-ogm-core = { module = "org.neo4j:neo4j-ogm-core", version.ref = "neo4j"}
neo4j-ogm = { module = "org.neo4j:neo4j-ogm", version.ref = "neo4j"}
neo4j-ogm-bolt = { module = "org.neo4j:neo4j-ogm-bolt-driver", version.ref = "neo4j"}

javaparser = { module = "com.github.javaparser:javaparser-symbol-solver-core", version = "3.24.7"}
jackson = { module = "com.fasterxml.jackson.module:jackson-module-kotlin", version = "2.14.0"}
eclipse-runtime = { module = "org.eclipse.platform:org.eclipse.core.runtime", version = "3.26.0"}
osgi-service = { module = "org.osgi:org.osgi.service.prefs", version = "1.1.2"}
icu4j = { module = "com.ibm.icu:icu4j", version = "72.1"}
eclipse-cdt-core = { module = "org.eclipse.cdt:core", version = "8.0.0.202211292120"}
commons-io = { module = "commons-io:commons-io", version = "2.11.0"}
jetbrains-annotations = { module = "org.jetbrains:annotations", version = "24.0.0"}
picocli = { module = "info.picocli:picocli", version = "4.7.0"}
picocli-codegen = { module = "info.picocli:picocli-codegen", version = "4.7.0"}
jep = { module = "black.ninia:jep", version = "4.1.1" }  # build.yml uses grep to extract the jep verison number for CI/CD purposes
llvm = { module = "org.bytedeco:llvm-platform", version = "15.0.3-1.5.8"}

# test
junit-params = { module = "org.junit.jupiter:junit-jupiter-params", version = "5.9.1"}
mockito = { module = "org.mockito:mockito-core", version = "5.0.0"}

# plugins needed for build.gradle.kts in buildSrc
kotlin-gradle = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
dokka-gradle = { module = "org.jetbrains.dokka:dokka-gradle-plugin", version = "1.7.20" } # the dokka plugin is slightly behind the main Kotlin release cycle
sonarqube-gradle = { module = "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin", version.ref = "sonarqube" }
spotless-gradle = { module = "com.diffplug.spotless:spotless-plugin-gradle", version.ref = "spotless" }

[bundles]
log4j = ["log4j-impl", "log4j-core"]
neo4j = ["neo4j-ogm-core", "neo4j-ogm", "neo4j-ogm-bolt"]

[plugins]
kotlin = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin"}
dokka = { id = "org.jetbrains.dokka", version.ref = "kotlin" }
sonarqube = { id = "org.sonarqube", version.ref = "sonarqube" }
spotless = { id = "com.diffplug.spotless", version.ref = "spotless" }
node = { id = "com.github.node-gradle.node", version = "3.5.0"}
