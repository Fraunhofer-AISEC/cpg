[versions]
kotlin = "2.2.0-RC3"
kotlinx-json = "1.8.0"
neo4j = "4.0.10"
neo4j5 = "5.28.2"
log4j = "2.24.0"
spotless = "7.0.4"
publish = "0.33.0"
sootup = "1.3.0"
slf4j = "2.0.16"
clikt = "5.0.2"
kaml = "0.85.0"
sarif4k = "0.6.0"
ktor = "3.2.1"
node = "22.14.0"
deno-plugin = "0.1.5"

[libraries]
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin"}
kotlin-scripting-common = { module = "org.jetbrains.kotlin:kotlin-scripting-common", version.ref = "kotlin"}
kotlin-scripting-dependencies = { module = "org.jetbrains.kotlin:kotlin-scripting-dependencies", version.ref = "kotlin"}
kotlin-scripting-jvm = { module = "org.jetbrains.kotlin:kotlin-scripting-jvm", version.ref = "kotlin"}
kotlin-scripting-jvm-host = { module = "org.jetbrains.kotlin:kotlin-scripting-jvm-host", version.ref = "kotlin"}
kotlin-test-junit5 = { module = "org.jetbrains.kotlin:kotlin-test-junit5", version.ref = "kotlin"}  # this is only needed for the testFixtures in cpg-core, everywhere else kotlin("test") is used
kotlin-serialization = { module = "org.jetbrains.kotlin:kotlin-serialization", version.ref = "kotlin" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-json" }

reflections = { module = "org.reflections:reflections", version = "0.10.2"}

log4j-impl = { module = "org.apache.logging.log4j:log4j-slf4j2-impl", version.ref = "log4j" }
log4j-core = { module = "org.apache.logging.log4j:log4j-core", version.ref = "log4j" }

slf4j-api = { module = "org.slf4j:slf4j-api", version.ref = "slf4j"}
slf4j-nop = { module = "org.slf4j:slf4j-nop", version.ref = "slf4j"}

apache-commons-lang3 = { module = "org.apache.commons:commons-lang3", version = "3.17.0"}
neo4j-ogm-core = { module = "org.neo4j:neo4j-ogm-core", version.ref = "neo4j"}
neo4j-ogm-bolt-driver = { module = "org.neo4j:neo4j-ogm-bolt-driver", version.ref = "neo4j"}
neo4j-driver = { module = "org.neo4j.driver:neo4j-java-driver", version.ref = "neo4j5"}

javaparser = { module = "com.github.javaparser:javaparser-symbol-solver-core", version = "3.27.0"}
jackson = { module = "com.fasterxml.jackson.module:jackson-module-kotlin", version = "2.18.0"}
jacksonyml = { module = "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml", version = "2.18.0"}
eclipse-runtime = { module = "org.eclipse.platform:org.eclipse.core.runtime", version = "3.33.0"}
osgi-service = { module = "org.osgi:org.osgi.service.prefs", version = "1.1.2"}
icu4j = { module = "com.ibm.icu:icu4j", version = "77.1"}
# Note: This "module" intentionally looks very weird, because the CDT version is actually part of the path of the CDT external
# repository. In order to avoid updating the repository URL everytime a new CDT version comes out, we need to do this weird hack.
eclipse-cdt-core = { module = "11.5/cdt-11.5.0/plugins/org.eclipse.cdt:core", version = "8.4.0.202402110645"}
picocli = { module = "info.picocli:picocli", version = "4.7.0"}
picocli-codegen = { module = "info.picocli:picocli-codegen", version = "4.7.0"}
jep = { module = "black.ninia:jep", version = "4.2.0" }  # build.yml uses grep to extract the jep verison number for CI/CD purposes
llvm = { module = "org.bytedeco:llvm-platform", version = "16.0.4-1.5.9"}
jruby = { module = "org.jruby:jruby-core", version = "9.4.3.0" }
ini4j = { module = "org.ini4j:ini4j", version = "0.5.4" }
clikt = { module = "com.github.ajalt.clikt:clikt", version.ref = "clikt" }
kaml = { module = "com.charleskorn.kaml:kaml", version.ref = "kaml" }
sarif4k = { module = "io.github.detekt.sarif4k:sarif4k", version.ref = "sarif4k" }

ktor-server-core = { module = "io.ktor:ktor-server-core", version.ref = "ktor" }
ktor-server-netty = { module = "io.ktor:ktor-server-netty", version.ref = "ktor" }
ktor-server-cors = { module = "io.ktor:ktor-server-cors", version.ref = "ktor" }
ktor-server-content-negotiation = { module = "io.ktor:ktor-server-content-negotiation", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-server-test-host = { module = "io.ktor:ktor-server-test-host", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }

mcp = {module = "io.modelcontextprotocol:kotlin-sdk", version = "0.5.0"}

# test
junit-params = { module = "org.junit.jupiter:junit-jupiter-params", version = "5.13.1"}
mockito = { module = "org.mockito:mockito-core", version = "5.17.0"}

# plugins needed for build.gradle.kts in buildSrc
publish-central = { module = "com.vanniktech:gradle-maven-publish-plugin", version.ref = "publish" }
kotlin-gradle = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
dokka-gradle = { module = "org.jetbrains.dokka:dokka-gradle-plugin", version = "2.0.0" } # the dokka plugin is slightly behind the main Kotlin release cycle
dokka-versioning = { module = "org.jetbrains.dokka:versioning-plugin", version = "2.0.0"}
kover-gradle = { module = "org.jetbrains.kotlinx:kover-gradle-plugin", version = "0.9.0" }
spotless-gradle = { module = "com.diffplug.spotless:spotless-plugin-gradle", version.ref = "spotless" }

sootup-core = { module = "org.soot-oss:sootup.core", version.ref = "sootup" }
sootup-java-core = { module = "org.soot-oss:sootup.java.core", version.ref = "sootup" }
sootup-java-sourcecode = { module = "org.soot-oss:sootup.java.sourcecode", version.ref = "sootup" }
sootup-java-bytecode = { module = "org.soot-oss:sootup.java.bytecode", version.ref = "sootup" }
sootup-jimple-parser = { module = "org.soot-oss:sootup.jimple.parser", version.ref = "sootup" }

[bundles]
log4j = ["log4j-impl", "log4j-core"]
neo4j = ["neo4j-ogm-core", "neo4j-ogm-bolt-driver"]
sootup = ["sootup-core", "sootup-java-core", "sootup-java-sourcecode", "sootup-java-bytecode", "sootup-jimple-parser"]
ktor = ["ktor-server-core", "ktor-server-netty", "ktor-server-cors","ktor-server-content-negotiation", "ktor-serialization-kotlinx-json"]

[plugins]
kotlin = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin"}
dokka = { id = "org.jetbrains.dokka", version.ref = "kotlin" }
spotless = { id = "com.diffplug.spotless", version.ref = "spotless" }
node = { id = "com.github.node-gradle.node", version = "7.1.0"}
deno = { id = "io.github.masch0212.deno", version.ref = "deno-plugin" }
ktor = { id = "io.ktor.plugin", version.ref = "ktor" }
download = { id = "de.undercouch.download", version = "5.6.0" }
