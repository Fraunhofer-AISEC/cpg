package de.fraunhofer.aisec.cpg.analysis

import java.nio.file.Path
import java.time.format.DateTimeFormatter

interface Reporter {
    /**
     *  Generates a report for the given rule
     *  @param rule the rule to generate the report for. The query result of the rule must be set by calling
     *  [Rule.run] before calling this method
     *  @param minify if true, a minified version of the report is generated
     *  @return the report as a string that can be written to a file
     */
    fun report(rule: Rule, minify: Boolean = false): String

    /**
     * Writes the report to a file
     * @param report the report to write to a file. Should be generated by calling [report]
     * @param path the path to write the report to. If unspecified, the default path is used
     */
    fun toFile(report: String, path: Path = getDefaultPath())

    // TODO: base path should be config lookup
    fun getDefaultPath(): Path

    companion object {
        internal val defaultTimeFormatter: DateTimeFormatter = DateTimeFormatter.ofPattern("yyyy-MM-dd-HH-mm-ss")
    }
}