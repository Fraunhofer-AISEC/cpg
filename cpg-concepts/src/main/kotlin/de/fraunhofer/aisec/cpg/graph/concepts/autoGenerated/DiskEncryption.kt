package de.fraunhofer.aisec.cpg.graph.concepts.autoGenerated

import de.fraunhofer.aisec.cpg.graph.Node
import java.util.Objects
import kotlin.Any
import kotlin.Boolean
import kotlin.Int
import kotlin.String

public abstract class DiskEncryption(
  public val target: BlockStorage?,
  algorithm: String?,
  enabled: Boolean?,
  keyUrl: String?,
  basedOn: Cipher?,
  secret: Secret?,
  underlyingNode: Node?,
) : AtRestEncryption(algorithm, enabled, keyUrl, basedOn, secret, underlyingNode) {
  override fun equals(other: Any?): Boolean = other is DiskEncryption &&
              super.equals(other) &&
              other.target == this.target

  override fun hashCode(): Int = Objects.hash(
              super.hashCode(),
              target,
          )
}
