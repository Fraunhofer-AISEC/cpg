package de.fraunhofer.aisec.cpg.graph.concepts.autoGenerated

import de.fraunhofer.aisec.cpg.graph.Name
import de.fraunhofer.aisec.cpg.graph.Node
import java.time.ZonedDateTime
import java.util.Objects
import kotlin.Any
import kotlin.Boolean
import kotlin.Int
import kotlin.String
import kotlin.collections.MutableList
import kotlin.collections.MutableMap

public abstract class VirtualMachine(
  public val activityLogging: ActivityLogging,
  public val automaticUpdates: AutomaticUpdates,
  public val blockStorage: MutableList<BlockStorage>,
  public val bootLogging: BootLogging,
  public val malwareProtection: MalwareProtection,
  public val osLogging: OSLogging,
  encryptionInUse: EncryptionInUse,
  networkInterfaces: MutableList<NetworkInterface>,
  remoteAttestation: RemoteAttestation,
  resourceLogging: ResourceLogging,
  internetAccessibleEndpoint: Boolean,
  geoLocation: GeoLocation,
  loggings: MutableList<Logging>,
  redundancies: Redundancy,
  usageStatistics: UsageStatistics,
  creation_time: ZonedDateTime,
  description: String,
  labels: MutableMap<String, String>,
  name: String,
  raw: String,
  parent: Resource,
  underlyingNode: Node,
) : Compute(encryptionInUse, networkInterfaces, remoteAttestation, resourceLogging,
    internetAccessibleEndpoint, geoLocation, loggings, redundancies, usageStatistics, creation_time,
    description, labels, name, raw, parent, underlyingNode) {
  init {
    this.name = Name(localName = name)
  }

  override fun equals(other: Any?): Boolean = other is VirtualMachine &&
              super.equals(other) &&
              other.activityLogging == this.activityLogging &&
              other.automaticUpdates == this.automaticUpdates &&
              other.blockStorage == this.blockStorage &&
              other.bootLogging == this.bootLogging &&
              other.malwareProtection == this.malwareProtection &&
              other.osLogging == this.osLogging

  override fun hashCode(): Int = Objects.hash(
              super.hashCode(),
              activityLogging,
              automaticUpdates,
              blockStorage,
              bootLogging,
              malwareProtection,
              osLogging,
          )
}
