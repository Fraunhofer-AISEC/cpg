package de.fraunhofer.aisec.cpg.graph.concepts.autoGenerated

import de.fraunhofer.aisec.cpg.graph.Name
import de.fraunhofer.aisec.cpg.graph.Node
import java.time.ZonedDateTime
import java.util.Objects
import kotlin.Any
import kotlin.Boolean
import kotlin.Int
import kotlin.String
import kotlin.collections.MutableList
import kotlin.collections.MutableMap

public abstract class Component(
  public val libraries: MutableList<Library>,
  codeModules: MutableList<CodeModule>,
  codeRepository: CodeRepository,
  functionalities: MutableList<Functionality>,
  creation_time: ZonedDateTime,
  description: String,
  labels: MutableMap<String, String>,
  name: String,
  raw: String,
  parent: Resource,
  underlyingNode: Node,
) : Code(codeModules, codeRepository, functionalities, creation_time, description, labels, name,
    raw, parent, underlyingNode) {
  init {
    this.name = Name(localName = name)
  }

  override fun equals(other: Any?): Boolean = other is Component &&
              super.equals(other) &&
              other.libraries == this.libraries

  override fun hashCode(): Int = Objects.hash(
              super.hashCode(),
              libraries,
          )
}
