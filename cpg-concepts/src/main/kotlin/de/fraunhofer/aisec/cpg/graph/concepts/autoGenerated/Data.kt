package de.fraunhofer.aisec.cpg.graph.concepts.autoGenerated

import de.fraunhofer.aisec.cpg.graph.Name
import de.fraunhofer.aisec.cpg.graph.Node
import java.time.ZonedDateTime
import java.util.Objects
import kotlin.Any
import kotlin.Boolean
import kotlin.Int
import kotlin.String
import kotlin.collections.MutableMap

public abstract class Data(
  public val dataLocation: DataLocation,
  creation_time: ZonedDateTime,
  description: String,
  labels: MutableMap<String, String>,
  name: String,
  raw: String,
  parent: Resource,
  underlyingNode: Node,
) : Resource(creation_time, description, labels, name, raw, parent, underlyingNode) {
  init {
    this.name = Name(localName = name)
  }

  override fun equals(other: Any?): Boolean = other is Data &&
              super.equals(other) &&
              other.dataLocation == this.dataLocation

  override fun hashCode(): Int = Objects.hash(
              super.hashCode(),
              dataLocation,
          )
}
