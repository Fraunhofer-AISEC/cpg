package de.fraunhofer.aisec.cpg.graph.concepts.autoGenerated

import de.fraunhofer.aisec.cpg.graph.Node
import de.fraunhofer.aisec.cpg.graph.concepts.Operation
import java.util.Objects
import kotlin.Any
import kotlin.Boolean
import kotlin.Int
import kotlin.String

/**
 * A generic LogOutput.
 */
public abstract class LogOutput(
  public val call: String?,
  public val `value`: String?,
  public val logging: Logging?,
  public val linkedConcept: Logging,
  underlyingNode: Node?,
) : Operation(linkedConcept, underlyingNode) {
  override fun equals(other: Any?): Boolean = other is LogOutput &&
              super.equals(other) &&
              other.call == this.call &&
              other.value == this.value &&
              other.logging == this.logging

  override fun hashCode(): Int = Objects.hash(
              super.hashCode(),
              call,
              value,
              logging,
          )
}
