/*
 * Copyright (c) 2025, Fraunhofer AISEC. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 *                    $$$$$$\  $$$$$$$\   $$$$$$\
 *                   $$  __$$\ $$  __$$\ $$  __$$\
 *                   $$ /  \__|$$ |  $$ |$$ /  \__|
 *                   $$ |      $$$$$$$  |$$ |$$$$\
 *                   $$ |      $$  ____/ $$ |\_$$ |
 *                   $$ |  $$\ $$ |      $$ |  $$ |
 *                   \$$$$$   |$$ |      \$$$$$   |
 *                    \______/ \__|       \______/
 *
 */
package de.fraunhofer.aisec.cpg.graph.concepts.autoGenerated

import de.fraunhofer.aisec.cpg.graph.Name
import de.fraunhofer.aisec.cpg.graph.Node
import java.time.ZonedDateTime
import kotlin.String
import kotlin.collections.MutableMap

/**
 * Represents a possible group source for a configuration group. For example, when loading an INI
 * file with our INI file frontend, each section is presented as a [RecordDeclaration]. This record
 * declaration would be the source of the configuration group.
 */
public abstract class ConfigurationGroupSource(
    dataLocation: DataLocation,
    creation_time: ZonedDateTime,
    description: String,
    labels: MutableMap<String, String>,
    name: String,
    raw: String,
    parent: Resource,
    underlyingNode: Node,
) : Data(dataLocation, creation_time, description, labels, name, raw, parent, underlyingNode) {
    init {
        this.name = Name(localName = name)
    }
}
