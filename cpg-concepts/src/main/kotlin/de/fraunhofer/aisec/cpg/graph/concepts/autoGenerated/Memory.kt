package de.fraunhofer.aisec.cpg.graph.concepts.autoGenerated

import de.fraunhofer.aisec.cpg.graph.Name
import de.fraunhofer.aisec.cpg.graph.Node
import java.time.ZonedDateTime
import kotlin.String
import kotlin.collections.MutableMap

/**
 * A generic concept to describe memory operations with a program. This includes allocation and
 * de-allocation of memory as well as copying memory regions.
 */
public abstract class Memory(
  public val mode: String,
  creation_time: ZonedDateTime,
  description: String,
  labels: MutableMap<String, String>,
  name: String,
  raw: String,
  parent: Resource,
  underlyingNode: Node,
) : Resource(creation_time, description, labels, name, raw, parent, underlyingNode) {
  init {
    this.name = Name(localName = name)
  }
}
