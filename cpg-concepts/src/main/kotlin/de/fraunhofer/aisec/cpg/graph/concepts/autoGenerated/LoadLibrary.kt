package de.fraunhofer.aisec.cpg.graph.concepts.autoGenerated

import de.fraunhofer.aisec.cpg.graph.Node
import de.fraunhofer.aisec.cpg.graph.concepts.Concept
import de.fraunhofer.aisec.cpg.graph.concepts.arch.OperatingSystemArchitecture
import java.util.Objects
import kotlin.Any
import kotlin.Boolean
import kotlin.Int
import kotlin.collections.MutableList

/**
 * Represents an operation that loads a shared library during runtime. A common example would be a
 * call to `dlopen` in C/C++.
 */
public abstract class LoadLibrary(
  public val entryPoints: MutableList<EntryPoint?>,
  operatingSystemArchitecture: OperatingSystemArchitecture?,
  linkedConcept: Memory?,
  concept: Concept?,
  underlyingNode: Node?,
) : DynamicLoadingOperation(operatingSystemArchitecture, linkedConcept, concept, underlyingNode) {
  override fun equals(other: Any?): Boolean = other is LoadLibrary &&
              super.equals(other) &&
              other.entryPoints == this.entryPoints

  override fun hashCode(): Int = Objects.hash(
              super.hashCode(),
              entryPoints,
          )
}
