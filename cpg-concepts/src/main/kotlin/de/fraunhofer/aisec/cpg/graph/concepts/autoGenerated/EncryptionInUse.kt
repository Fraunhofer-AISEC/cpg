package de.fraunhofer.aisec.cpg.graph.concepts.autoGenerated

import de.fraunhofer.aisec.cpg.graph.Node
import java.util.Objects
import kotlin.Any
import kotlin.Boolean
import kotlin.Int

public abstract class EncryptionInUse(
  public val enabled: Boolean,
  underlyingNode: Node,
) : Confidentiality(underlyingNode) {
  override fun equals(other: Any?): Boolean = other is EncryptionInUse &&
              super.equals(other) &&
              other.enabled == this.enabled

  override fun hashCode(): Int = Objects.hash(
              super.hashCode(),
              enabled,
          )
}
