package de.fraunhofer.aisec.cpg.graph.concepts.autoGenerated

import de.fraunhofer.aisec.cpg.graph.Name
import de.fraunhofer.aisec.cpg.graph.Node
import java.util.List
import java.util.Objects
import kotlin.Any
import kotlin.Boolean
import kotlin.Int
import kotlin.String

/**
 * cwe: Common Weakness Enumeration
 */
public abstract class Vulnerability(
  public val cve: String,
  public val cwe: List<String>,
  public val description: String,
  name: String,
  public val url: String,
  underlyingNode: Node,
) : Functionality(underlyingNode) {
  override fun equals(other: Any?): Boolean = other is Vulnerability &&
              super.equals(other) &&
              other.cve == this.cve &&
              other.cwe == this.cwe &&
              other.description == this.description &&
              other.name == this.name &&
              other.url == this.url

  override fun hashCode(): Int = Objects.hash(
              super.hashCode(),
              cve,
              cwe,
              description,
              name,
              url,
          )
}
