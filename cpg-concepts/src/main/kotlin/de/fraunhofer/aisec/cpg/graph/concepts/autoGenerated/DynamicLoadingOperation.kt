package de.fraunhofer.aisec.cpg.graph.concepts.autoGenerated

import de.fraunhofer.aisec.cpg.graph.Node
import de.fraunhofer.aisec.cpg.graph.concepts.Concept
import de.fraunhofer.aisec.cpg.graph.concepts.arch.OperatingSystemArchitecture
import java.util.Objects
import kotlin.Any
import kotlin.Boolean
import kotlin.Int

/**
 * Represents an operation used by the [DynamicLoading] concept.
 */
public abstract class DynamicLoadingOperation(
  public val operatingSystemArchitecture: OperatingSystemArchitecture,
  linkedConcept: Memory,
  concept: Concept,
  underlyingNode: Node,
) : MemoryOperation(linkedConcept, concept, underlyingNode) {
  override fun equals(other: Any?): Boolean = other is DynamicLoadingOperation &&
              super.equals(other) &&
              other.operatingSystemArchitecture == this.operatingSystemArchitecture

  override fun hashCode(): Int = Objects.hash(
              super.hashCode(),
              operatingSystemArchitecture,
          )
}
