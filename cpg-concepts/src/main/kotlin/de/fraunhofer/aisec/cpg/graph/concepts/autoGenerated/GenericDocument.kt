package de.fraunhofer.aisec.cpg.graph.concepts.autoGenerated

import de.fraunhofer.aisec.cpg.graph.Name
import de.fraunhofer.aisec.cpg.graph.Node
import java.time.ZonedDateTime
import java.util.Objects
import kotlin.Any
import kotlin.Boolean
import kotlin.Int
import kotlin.String
import kotlin.collections.MutableList
import kotlin.collections.MutableMap

/**
 * This is a placeholder for all other documents, e.g. index.txt
 */
public abstract class GenericDocument(
  filetype: String?,
  documentChecksums: MutableList<DocumentChecksum?>,
  documentSignatures: MutableList<DocumentSignature?>,
  securityFeatures: MutableList<SecurityFeature?>,
  validatedBy: SchemaValidation?,
  dataLocation: DataLocation?,
  creation_time: ZonedDateTime?,
  description: String?,
  labels: MutableMap<String, String>?,
  name: String?,
  raw: String?,
  parent: Resource?,
  underlyingNode: Node?,
) : Document(filetype, documentChecksums, documentSignatures, securityFeatures, validatedBy,
    dataLocation, creation_time, description, labels, name, raw, parent, underlyingNode) {
  init {
    this.name = Name(localName = name)
  }

  override fun equals(other: Any?): Boolean = other is GenericDocument &&
              super.equals(other)

  override fun hashCode(): Int = Objects.hash(
              super.hashCode(),
          )
}
