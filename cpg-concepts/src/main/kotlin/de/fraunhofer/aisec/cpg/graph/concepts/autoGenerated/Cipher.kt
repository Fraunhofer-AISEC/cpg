package de.fraunhofer.aisec.cpg.graph.concepts.autoGenerated

import de.fraunhofer.aisec.cpg.graph.Name
import de.fraunhofer.aisec.cpg.graph.Node
import java.util.Objects
import kotlin.Any
import kotlin.Boolean
import kotlin.Int
import kotlin.String

/**
 * Represents a cipher suite. E.g. `AES-XTS-plain64`.
 */
public abstract class Cipher(
  public val blockSize: Int,
  public val keySize: Int,
  name: String,
  underlyingNode: Node,
) : Functionality(underlyingNode) {
  override fun equals(other: Any?): Boolean = other is Cipher &&
              super.equals(other) &&
              other.blockSize == this.blockSize &&
              other.keySize == this.keySize &&
              other.name == this.name

  override fun hashCode(): Int = Objects.hash(
              super.hashCode(),
              blockSize,
              keySize,
              name,
          )
}
