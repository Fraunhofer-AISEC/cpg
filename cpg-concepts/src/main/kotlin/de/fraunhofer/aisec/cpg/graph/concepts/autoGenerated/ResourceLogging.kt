package de.fraunhofer.aisec.cpg.graph.concepts.autoGenerated

import de.fraunhofer.aisec.cpg.graph.Name
import de.fraunhofer.aisec.cpg.graph.Node
import java.time.Duration
import java.util.Objects
import kotlin.Any
import kotlin.Boolean
import kotlin.Int
import kotlin.String

public abstract class ResourceLogging(
  enabled: Boolean,
  monitoringEnabled: Boolean,
  name: String,
  retentionPeriod: Duration,
  securityAlertsEnabled: Boolean,
  loggingService: LoggingService,
  underlyingNode: Node,
) : Logging(enabled, monitoringEnabled, name, retentionPeriod, securityAlertsEnabled,
    loggingService, underlyingNode) {
  init {
    this.name = Name(localName = name)
  }

  override fun equals(other: Any?): Boolean = other is ResourceLogging &&
              super.equals(other)

  override fun hashCode(): Int = Objects.hash(
              super.hashCode(),
          )
}
