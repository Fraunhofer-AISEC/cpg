package de.fraunhofer.aisec.cpg.graph.concepts.autoGenerated

import de.fraunhofer.aisec.cpg.graph.Name
import de.fraunhofer.aisec.cpg.graph.Node
import java.time.ZonedDateTime
import java.util.Objects
import kotlin.Any
import kotlin.Boolean
import kotlin.Int
import kotlin.String
import kotlin.collections.MutableMap

public abstract class MachineLearningDataset(
  public val size: Int?,
  public val type: String?,
  dataLocation: DataLocation?,
  creation_time: ZonedDateTime?,
  description: String?,
  labels: MutableMap<String, String>?,
  name: String?,
  raw: String?,
  parent: Resource?,
  underlyingNode: Node?,
) : MachineLearning(dataLocation, creation_time, description, labels, name, raw, parent,
    underlyingNode) {
  init {
    this.name = Name(localName = name)
  }

  override fun equals(other: Any?): Boolean = other is MachineLearningDataset &&
              super.equals(other) &&
              other.size == this.size &&
              other.type == this.type

  override fun hashCode(): Int = Objects.hash(
              super.hashCode(),
              size,
              type,
          )
}
