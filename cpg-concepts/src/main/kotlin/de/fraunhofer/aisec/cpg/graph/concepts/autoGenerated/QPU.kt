package de.fraunhofer.aisec.cpg.graph.concepts.autoGenerated

import de.fraunhofer.aisec.cpg.graph.Name
import de.fraunhofer.aisec.cpg.graph.Node
import java.time.ZonedDateTime
import kotlin.Boolean
import kotlin.Float
import kotlin.String
import kotlin.collections.MutableList
import kotlin.collections.MutableMap

public abstract class QPU(
  public val OneQubitErrorRate: Float,
  public val SpamErrorRate: Float,
  public val TwoQubitErrorRate: Float,
  public val errorCorrectionEnabled: Boolean,
  encryptionInUse: EncryptionInUse,
  networkInterfaces: MutableList<NetworkInterface>,
  remoteAttestation: RemoteAttestation,
  resourceLogging: ResourceLogging,
  internetAccessibleEndpoint: Boolean,
  geoLocation: GeoLocation,
  loggings: MutableList<Logging>,
  redundancies: Redundancy,
  usageStatistics: UsageStatistics,
  creation_time: ZonedDateTime,
  description: String,
  labels: MutableMap<String, String>,
  name: String,
  raw: String,
  parent: Resource,
  underlyingNode: Node,
) : Compute(encryptionInUse, networkInterfaces, remoteAttestation, resourceLogging,
    internetAccessibleEndpoint, geoLocation, loggings, redundancies, usageStatistics, creation_time,
    description, labels, name, raw, parent, underlyingNode) {
  init {
    this.name = Name(localName = name)
  }
}
