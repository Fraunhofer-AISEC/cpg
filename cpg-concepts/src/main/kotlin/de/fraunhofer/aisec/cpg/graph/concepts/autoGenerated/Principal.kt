package de.fraunhofer.aisec.cpg.graph.concepts.autoGenerated

import de.fraunhofer.aisec.cpg.graph.Node
import java.util.Objects
import kotlin.Any
import kotlin.Boolean
import kotlin.Int

/**
 * Represents a principal that is allowed to access a resource. This can for example be a (structure
 * representing) a user or a group of users.
 */
public abstract class Principal(
  underlyingNode: Node?,
) : Functionality(underlyingNode) {
  override fun equals(other: Any?): Boolean = other is Principal &&
              super.equals(other)

  override fun hashCode(): Int = Objects.hash(
              super.hashCode(),
          )
}
