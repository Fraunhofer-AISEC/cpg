package de.fraunhofer.aisec.cpg.graph.concepts.autoGenerated

import de.fraunhofer.aisec.cpg.graph.Node
import java.util.Objects
import kotlin.Any
import kotlin.Boolean
import kotlin.Int
import kotlin.collections.MutableList

/**
 * Represents an asset that is protected by a policy. This can be an in-memory data structure, a
 * file, a database, or any other resource that requires access control.
 */
public abstract class ProtectedAsset(
  public val policies: MutableList<Policy?>,
  public val protects: Resource?,
  underlyingNode: Node?,
) : Functionality(underlyingNode) {
  override fun equals(other: Any?): Boolean = other is ProtectedAsset &&
              super.equals(other) &&
              other.policies == this.policies &&
              other.protects == this.protects

  override fun hashCode(): Int = Objects.hash(
              super.hashCode(),
              policies,
              protects,
          )
}
