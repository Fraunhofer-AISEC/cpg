package de.fraunhofer.aisec.cpg.graph.concepts.autoGenerated

import de.fraunhofer.aisec.cpg.graph.Name
import de.fraunhofer.aisec.cpg.graph.Node
import java.time.ZonedDateTime
import java.util.Objects
import kotlin.Any
import kotlin.Boolean
import kotlin.Int
import kotlin.String
import kotlin.collections.MutableList
import kotlin.collections.MutableMap

/**
 * Represents a possible source for a configuration. For example, when loading an INI file with our
 * INI file frontend, the whole file would be represented as a [TranslationUnitDeclaration]. This
 * translation unit declaration would be the source of the configuration.
 */
public abstract class ConfigurationSource(
  public val configurationGroupSources: MutableList<ConfigurationGroupSource>,
  dataLocation: DataLocation,
  creation_time: ZonedDateTime,
  description: String,
  labels: MutableMap<String, String>,
  name: String,
  raw: String,
  parent: Resource,
  underlyingNode: Node,
) : Data(dataLocation, creation_time, description, labels, name, raw, parent, underlyingNode) {
  init {
    this.name = Name(localName = name)
  }

  override fun equals(other: Any?): Boolean = other is ConfigurationSource &&
              super.equals(other) &&
              other.configurationGroupSources == this.configurationGroupSources

  override fun hashCode(): Int = Objects.hash(
              super.hashCode(),
              configurationGroupSources,
          )
}
