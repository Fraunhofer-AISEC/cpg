package de.fraunhofer.aisec.cpg.graph.concepts.autoGenerated

import de.fraunhofer.aisec.cpg.graph.Node
import de.fraunhofer.aisec.cpg.graph.concepts.Operation
import java.util.Objects
import kotlin.Any
import kotlin.Boolean
import kotlin.Int
import kotlin.String

public abstract class EncryptionOperation(
  public val algorithm: String?,
  public val secret: Secret?,
  public val linkedConcept: Encryption,
  underlyingNode: Node?,
) : Operation(linkedConcept, underlyingNode) {
  override fun equals(other: Any?): Boolean = other is EncryptionOperation &&
              super.equals(other) &&
              other.algorithm == this.algorithm &&
              other.secret == this.secret

  override fun hashCode(): Int = Objects.hash(
              super.hashCode(),
              algorithm,
              secret,
          )
}
