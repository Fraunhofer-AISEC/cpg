package de.fraunhofer.aisec.cpg.graph.concepts.autoGenerated

import de.fraunhofer.aisec.cpg.graph.Node
import java.util.Objects
import kotlin.Any
import kotlin.Boolean
import kotlin.Int

/**
 * Represents an operation to provide a [ConfigurationGroup]. It connects a
 * [ConfigurationGroupSource] with a [ConfigurationGroup].
 */
public abstract class ProvideConfigurationGroup(
  public val configurationGroup: ConfigurationGroup?,
  public val configurationGroupSource: ConfigurationGroupSource?,
  linkedConcept: Configuration,
  underlyingNode: Node?,
) : ConfigurationOperation(linkedConcept, underlyingNode) {
  override fun equals(other: Any?): Boolean = other is ProvideConfigurationGroup &&
              super.equals(other) &&
              other.configurationGroup == this.configurationGroup &&
              other.configurationGroupSource == this.configurationGroupSource

  override fun hashCode(): Int = Objects.hash(
              super.hashCode(),
              configurationGroup,
              configurationGroupSource,
          )
}
