package de.fraunhofer.aisec.cpg.graph.concepts.autoGenerated

import de.fraunhofer.aisec.cpg.graph.Node
import de.fraunhofer.aisec.cpg.graph.concepts.Concept
import java.util.Objects
import kotlin.Any
import kotlin.Boolean
import kotlin.Int
import kotlin.String

public abstract class CryptographicHash(
  public val algorithm: String?,
  public val usesSalt: Boolean?,
  linkedConcept: Confidentiality?,
  concept: Concept?,
  underlyingNode: Node?,
) : CryptographicOperation(linkedConcept, concept, underlyingNode) {
  override fun equals(other: Any?): Boolean = other is CryptographicHash &&
              super.equals(other) &&
              other.algorithm == this.algorithm &&
              other.usesSalt == this.usesSalt

  override fun hashCode(): Int = Objects.hash(
              super.hashCode(),
              algorithm,
              usesSalt,
          )
}
